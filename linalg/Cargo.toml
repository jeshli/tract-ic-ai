[package]
name = "tract-linalg"
version = "0.20.22-pre"
license = "MIT OR Apache-2.0"
authors = ["Mathieu Poumeyrol <kali@zoy.org>"]
description = "Tiny, no-nonsense, self contained, TensorFlow and ONNX inference"
repository = "https://github.com/snipsco/tract"
keywords = ["TensorFlow", "NeuralNetworks"]
categories = ["science"]
autobenches = false
edition = "2021"

[badges]
maintenance = { status = "actively-developed" }

[dependencies]
derive-new = "0.5.9"
downcast-rs = "1.2.0"
dyn-clone = "1.0.4"
lazy_static = "1.4.0"
#log = "0.4.14"
num-traits = "0.2.14"
paste = "1.0.5"
#scan_fmt = "0.2.6"
tract-data = { path = "../data" }

[build-dependencies]
#cc = "1.0.69"
#half = { version="=2.2.1", features = [ "std", "num-traits" ] }
#liquid = "0.26"
#liquid-core = "0.26"
#smallvec = "1.6.1"
#unicode-normalization = "0.1.19"
#time = "=0.3.23"
#walkdir = "2.3.2"



[dev-dependencies]
#criterion.workspace = true
#env_logger.workspace = true
#nu-ansi-term.workspace = true
#proptest.workspace = true
#core_affinity.workspace = true

[features]
# This feature is meant to accomodate very restrictive / legacy toolchains that do
# have support for fp16 instructions, breaking tract compilation.
# It is not meant to be used in other situations, where run-time detection is
# preferred.
no_fp16 = []
default = []
complex = [ "tract-data/complex" ]

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
#opt-level = "z"